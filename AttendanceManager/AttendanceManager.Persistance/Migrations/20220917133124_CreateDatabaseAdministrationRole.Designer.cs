// <auto-generated />
using System;
using AttendanceManager.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendanceManager.Persistance.Migrations
{
    [DbContext(typeof(AttendanceManagerDbContext))]
    [Migration("20220917133124_CreateDatabaseAdministrationRole")]
    partial class CreateDatabaseAdministrationRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendanceManager.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AttendanceManager.Domain.Entities.Specialisation", b =>
                {
                    b.Property<Guid>("SpecialisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialisationID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Specialisations");
                });

            modelBuilder.Entity("AttendanceManager.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnroleYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("9f682383-5b3d-4cab-a949-594a22e71214"),
                            Email = "admin@admin.ro",
                            FullName = "Administrator",
                            Password = "system123",
                            Role = 0
                        });
                });

            modelBuilder.Entity("AttendanceManager.Domain.Entities.UserSpecialisation", b =>
                {
                    b.Property<Guid>("UserSpecialisationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecialisationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserSpecialisationID");

                    b.HasIndex("SpecialisationID");

                    b.HasIndex("UserID");

                    b.ToTable("UserSpecialisations");
                });

            modelBuilder.Entity("AttendanceManager.Domain.Entities.Specialisation", b =>
                {
                    b.HasOne("AttendanceManager.Domain.Entities.Department", "Department")
                        .WithMany("Specialisations")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceManager.Domain.Entities.UserSpecialisation", b =>
                {
                    b.HasOne("AttendanceManager.Domain.Entities.Specialisation", "Specialisation")
                        .WithMany("UserSpecialisations")
                        .HasForeignKey("SpecialisationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceManager.Domain.Entities.User", "User")
                        .WithMany("UserSpecialisations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
